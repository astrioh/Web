import axios from 'axios'
import { PUSH_BOARD } from '../actions/boards'
import { PUSH_COLOR, PUSH_MYCOLOR } from '../actions/colors'
import { PUSH_DEPARTMENT } from '../actions/departments'
import { PUSH_EMPLOYEE, PUSH_EMPLOYEE_BY_EMAIL } from '../actions/employees'
import {
  NAVIGATOR_CHANGE_EMPLOYEE_DEPARTMENT,
  NAVIGATOR_ERROR,
  NAVIGATOR_PUSH_BOARD,
  NAVIGATOR_PUSH_COLOR,
  NAVIGATOR_PUSH_DEPARTAMENT,
  NAVIGATOR_PUSH_EMPLOYEE,
  NAVIGATOR_PUSH_PROJECT,
  NAVIGATOR_PUSH_REGLAMENT,
  NAVIGATOR_PUSH_TAG,
  NAVIGATOR_REMOVE_BOARD,
  NAVIGATOR_REMOVE_COLOR,
  NAVIGATOR_REMOVE_DEPARTAMENT,
  NAVIGATOR_REMOVE_EMPLOYEE,
  NAVIGATOR_REMOVE_PROJECT,
  NAVIGATOR_REMOVE_REGLAMENT,
  NAVIGATOR_REMOVE_TAG,
  NAVIGATOR_REQUEST,
  NAVIGATOR_SUCCESS,
  NAVIGATOR_UPDATE_ASSIGNMENTS,
  NAVIGATOR_UPDATE_DEPARTMENT,
  NAVIGATOR_UPDATE_EMPLOYEE,
  NAVIGATOR_UPDATE_REGLAMENT,
  PATCH_SETTINGS,
  PATCH_SETTINGS_SUCCESS,
  RESET_STATE_NAVIGATOR
} from '../actions/navigator'
import { PUSH_PROJECT } from '../actions/projects'
import { ADD_TASK_TAGS } from '../actions/tasks'
import { visitChildren } from '../helpers/functions'

const getDefaultState = () => {
  return {
    navigator: false,
    lastTab: localStorage.getItem('lastTab') ?? 'doitnow',
    currentSettingsTab: localStorage.getItem('currentSettingsTab') ?? 'account',
    status: '',
    computedNavigator: false,
    hasLoadedOnce: false,
    menu: []
  }
}

function getAllMembersByDepartmentUID (emps, departmentUID) {
  const employeesStuck = []
  for (const employee of emps) {
    if (employee.uid_dep === departmentUID) {
      employeesStuck.push(employee)
    }
  }
  return employeesStuck
}

const state = getDefaultState()

const getters = {
  getNavigator: (state) => state.navigator,
  navigatorStatus: (state) => state.status,
  sortedNavigator: (state) => {
    state.navigator.new_private_boards[1].items.sort((board1, board2) => { return board1.name.localeCompare(board2.name) })
    state.navigator.new_private_projects[1].items.sort((project1, project2) => { return project1.name.localeCompare(project2.name) })
    return state.navigator
  }
}

const actions = {
  [NAVIGATOR_REQUEST]: ({ commit, dispatch, rootState }) => {
    return new Promise((resolve, reject) => {
      commit(NAVIGATOR_REQUEST)
      const url = process.env.VUE_APP_LEADERTASK_API + 'api/v1/navigator/info'
      axios({ url: url, method: 'GET' })
        .then((resp) => {
          resp.rootState = rootState

          if (resp.data.delegate_iam) {
            for (const dm of resp.data.delegate_iam.items) {
              dm.parentID = resp.data.delegate_iam.uid
            }
          }
          if (resp.data.delegate_to_me) {
            for (const dt of resp.data.delegate_to_me.items) {
              dt.parentID = resp.data.delegate_to_me.uid
            }
          }
          if (resp.data.emps.items) {
            for (const employee of resp.data.emps.items) {
              employee.parentID = resp.data.emps.uid
              commit(PUSH_EMPLOYEE, employee)
              commit(PUSH_EMPLOYEE_BY_EMAIL, employee)
            }
          }
          commit(NAVIGATOR_SUCCESS, resp)
          // TODO: we are doing the same thing 3 times, DRY
          // process colors in shared vuex storage
          if (resp.data.colors.items) {
            commit(PUSH_COLOR, resp.data.colors.items)
            commit(PUSH_MYCOLOR, resp.data.colors.items)
            visitChildren(resp.data.colors.items, (value) => {
              value.parentID = resp.data.colors.uid
            })
          }
          // process private projects then put them in shared vuex storage
          if (resp.data.private_projects.items) {
            const myPrivateProjects = []
            visitChildren(resp.data.private_projects.items, (value) => {
              value.global_property_uid = resp.data.private_projects.uid
              myPrivateProjects.push(value)
            })
            commit(PUSH_PROJECT, myPrivateProjects)
          }
          // process shared projects then put them in shared vuex storage
          if (resp.data.common_projects.items) {
            const myCommonProjects = []
            visitChildren(resp.data.common_projects.items, (value) => {
              value.global_property_uid = resp.data.common_projects.uid
              myCommonProjects.push(value)
            })
            commit(PUSH_PROJECT, myCommonProjects)
          }

          if (resp.data.private_boards.items) {
            const myPrivateBoards = []
            visitChildren(resp.data.private_boards.items, (value) => {
              value.global_property_uid = resp.data.private_boards.uid
              myPrivateBoards.push(value)
            })
            commit(PUSH_BOARD, myPrivateBoards)
          }
          if (resp.data.common_projects.items) {
            const myCommonBoards = []
            visitChildren(resp.data.common_boards.items, (value) => {
              value.global_property_uid = resp.data.common_boards.uid
              myCommonBoards.push(value)
            })
            commit(PUSH_BOARD, myCommonBoards)
          }
          if (resp.data.deps.items) {
            for (const department of resp.data.deps.items) {
              commit(PUSH_DEPARTMENT, department)
            }
          }
          // process tags then put them in shared vuex storage
          if (resp.data.tags.items) {
            const myTags = []
            visitChildren(resp.data.tags.items, (value) => {
              // TODO: how to remove children without hurt actual data?
              value.global_property_uid = resp.data.tags.uid
              myTags.push(value)
            })
            commit(ADD_TASK_TAGS, myTags)
          }
          dispatch('setDots', resp.data.calendar.dates_with_tasks)
          resolve(resp)
        })
        .catch((err) => {
          commit(NAVIGATOR_ERROR, err)
          reject(err)
        })
    })
  },
  [PATCH_SETTINGS]: ({ commit, dispatch }, settings) => {
    return new Promise((resolve, reject) => {
      const url = process.env.VUE_APP_LEADERTASK_API + 'api/v1/settings/all'
      axios({ url: url, method: 'PATCH', data: settings })
        .then((resp) => {
          resolve(resp)
        })
        .catch((err) => {
          reject(err)
        })
    })
  },
  [NAVIGATOR_UPDATE_EMPLOYEE]: ({ commit, dispatch }, employee) => {
    commit(NAVIGATOR_UPDATE_EMPLOYEE, employee)
    commit(PUSH_EMPLOYEE, employee)
    commit(PUSH_EMPLOYEE_BY_EMAIL, employee)
  },
  [NAVIGATOR_UPDATE_ASSIGNMENTS]: ({ commit }) => {
    return new Promise((resolve, reject) => {
      const url =
        process.env.VUE_APP_LEADERTASK_API + 'api/v1/navigator/assignments'
      axios({ url: url, method: 'GET' })
        .then((resp) => {
          if (resp.data.delegate_iam) {
            for (const dm of resp.data.delegate_iam.items) {
              dm.parentID = resp.data.delegate_iam.uid
            }
          }
          if (resp.data.delegate_to_me) {
            for (const dt of resp.data.delegate_to_me.items) {
              dt.parentID = resp.data.delegate_to_me.uid
            }
          }
          commit(NAVIGATOR_UPDATE_ASSIGNMENTS, resp)
          resolve(resp)
        })
        .catch((err) => {
          reject(err)
        })
    })
  }
}

const mutations = {
  [NAVIGATOR_REQUEST]: (state) => {
    state.status = 'loading'
  },
  [NAVIGATOR_SUCCESS]: (state, resp) => {
    state.status = 'success'
    state.hasLoadedOnce = true
    console.log('navigator ', resp)
    state.menu = []
    if (state.lastTab === 'tasks' || state.lastTab === 'doitnow') {
      state.menu.push([
        {
          label: 'Сегодня',
          uid: '901841d9-0016-491d-ad66-8ee42d2b496b',
          bold: false,
          icon: 'M8.69787 4.46611C8.69787 3.91238 9.14675 3.4635 9.70047 3.4635C10.2542 3.4635 10.7031 3.91238 10.7031 4.46611V5.18226H19.2969V4.46611C19.2969 3.91238 19.7457 3.4635 20.2995 3.4635C20.8532 3.4635 21.3021 3.91238 21.3021 4.46611V5.18226H23.0208C24.2865 5.18226 25.3125 6.20827 25.3125 7.47393V22.3698C25.3125 23.6355 24.2865 24.6615 23.0208 24.6615H6.97911C5.71346 24.6615 4.68744 23.6355 4.68744 22.3698V7.47393C4.68744 6.20827 5.71346 5.18226 6.97911 5.18226H8.69787V4.46611ZM19.2969 6.75778V7.90362C19.2969 8.45734 19.7457 8.90622 20.2995 8.90622C20.8532 8.90622 21.3021 8.45734 21.3021 7.90362V6.75778H23.0208C23.4163 6.75778 23.737 7.07841 23.737 7.47393V22.3698C23.737 22.7653 23.4163 23.086 23.0208 23.086H6.97911C6.58359 23.086 6.26296 22.7653 6.26296 22.3698V7.47393C6.26296 7.07841 6.58359 6.75778 6.97911 6.75778H8.69787V7.90362C8.69787 8.45734 9.14675 8.90622 9.70047 8.90622C10.2542 8.90622 10.7031 8.45734 10.7031 7.90362V6.75778H19.2969ZM9.61999 10.8333C8.90944 10.8333 8.33344 11.4224 8.33344 12.1491C8.33344 12.8758 8.90944 13.4649 9.61999 13.4649C10.3305 13.4649 10.9065 12.8758 10.9065 12.1491C10.9065 11.4224 10.3305 10.8333 9.61999 10.8333ZM15.4913 12.1491C15.4913 11.4224 16.0673 10.8333 16.7779 10.8333C17.4884 10.8333 18.0644 11.4224 18.0644 12.1491C18.0644 12.8758 17.4884 13.4649 16.7779 13.4649C16.0673 13.4649 15.4913 12.8758 15.4913 12.1491ZM15.4913 15.8333C15.4913 15.1066 16.0673 14.5175 16.7779 14.5175C17.4884 14.5175 18.0644 15.1066 18.0644 15.8333C18.0644 16.56 17.4884 17.1491 16.7779 17.1491C16.0673 17.1491 15.4913 16.56 15.4913 15.8333ZM15.4913 19.5175C15.4913 18.7908 16.0673 18.2017 16.7779 18.2017C17.4884 18.2017 18.0644 18.7908 18.0644 19.5175C18.0644 20.2442 17.4884 20.8333 16.7779 20.8333C16.0673 20.8333 15.4913 20.2442 15.4913 19.5175ZM19.0937 12.1491C19.0937 11.4224 19.6697 10.8333 20.3802 10.8333C21.0908 10.8333 21.6668 11.4224 21.6668 12.1491C21.6668 12.8758 21.0908 13.4649 20.3802 13.4649C19.6697 13.4649 19.0937 12.8758 19.0937 12.1491ZM19.0937 15.8333C19.0937 15.1066 19.6697 14.5175 20.3802 14.5175C21.0908 14.5175 21.6668 15.1066 21.6668 15.8333C21.6668 16.56 21.0908 17.1491 20.3802 17.1491C19.6697 17.1491 19.0937 16.56 19.0937 15.8333ZM19.0937 19.5175C19.0937 18.7908 19.6697 18.2017 20.3802 18.2017C21.0908 18.2017 21.6668 18.7908 21.6668 19.5175C21.6668 20.2442 21.0908 20.8333 20.3802 20.8333C19.6697 20.8333 19.0937 20.2442 19.0937 19.5175ZM8.33344 15.8333C8.33344 15.1066 8.90944 14.5175 9.61999 14.5175C10.3305 14.5175 10.9065 15.1066 10.9065 15.8333C10.9065 16.56 10.3305 17.1491 9.61999 17.1491C8.90944 17.1491 8.33344 16.56 8.33344 15.8333ZM8.33344 19.5175C8.33344 18.7908 8.90944 18.2017 9.61999 18.2017C10.3305 18.2017 10.9065 18.7908 10.9065 19.5175C10.9065 20.2442 10.3305 20.8333 9.61999 20.8333C8.90944 20.8333 8.33344 20.2442 8.33344 19.5175ZM11.9358 12.1491C11.9358 11.4224 12.5118 10.8333 13.2223 10.8333C13.9329 10.8333 14.5089 11.4224 14.5089 12.1491C14.5089 12.8758 13.9329 13.4649 13.2223 13.4649C12.5118 13.4649 11.9358 12.8758 11.9358 12.1491ZM11.9358 15.8333C11.9358 15.1066 12.5118 14.5175 13.2223 14.5175C13.9329 14.5175 14.5089 15.1066 14.5089 15.8333C14.5089 16.56 13.9329 17.1491 13.2223 17.1491C12.5118 17.1491 11.9358 16.56 11.9358 15.8333ZM11.9358 19.5175C11.9358 18.7908 12.5118 18.2017 13.2223 18.2017C13.9329 18.2017 14.5089 18.7908 14.5089 19.5175C14.5089 20.2442 13.9329 20.8333 13.2223 20.8333C12.5118 20.8333 11.9358 20.2442 11.9358 19.5175Z',
          width: 30,
          height: 30,
          iconBox: '0 0 30 30',
          type: 'uid',
          iconBackgroundClass: ''
        },
        {
          label: 'Просроченные',
          uid: '46418722-a720-4c9e-b255-16db4e590c34',
          bold: false,
          icon: 'M18.283 22.2558L18.3026 22.2846C18.6498 22.7855 19.1424 23.178 19.7195 23.4009C19.7331 23.4061 19.7467 23.4113 19.7604 23.4163C20.0915 23.5387 20.4495 23.6056 20.8231 23.6056C22.5154 23.6056 23.8873 22.2337 23.8873 20.5413C23.8873 20.1175 23.8013 19.7138 23.6458 19.3468C23.6224 19.2917 23.5975 19.2374 23.5711 19.1841C23.3132 18.663 22.9115 18.2258 22.4179 17.9243C22.3893 17.9068 22.3603 17.8898 22.3311 17.8732C21.8859 17.621 21.3713 17.4771 20.8231 17.4771C19.1307 17.4771 17.7588 18.849 17.7588 20.5413C17.7588 21.1765 17.9521 21.7665 18.283 22.2558ZM22.9036 16.4417C22.2789 16.124 21.5719 15.9449 20.8231 15.9449C18.2846 15.9449 16.2267 18.0028 16.2267 20.5413C16.2267 21.3666 16.4441 22.141 16.8249 22.8104C16.0862 23.0166 15.3075 23.1268 14.503 23.1268C9.7433 23.1268 5.88478 19.2683 5.88478 14.5086C5.88478 9.74885 9.7433 5.89033 14.503 5.89033C19.2628 5.89033 23.1213 9.74885 23.1213 14.5086C23.1213 15.1732 23.046 15.8203 22.9036 16.4417ZM24.3696 17.6172C24.6784 16.636 24.8449 15.5918 24.8449 14.5086C24.8449 8.79691 20.2147 4.16669 14.503 4.16669C8.79136 4.16669 4.16113 8.79691 4.16113 14.5086C4.16113 20.2202 8.79136 24.8505 14.503 24.8505C15.7554 24.8505 16.9559 24.6278 18.0669 24.22C18.8348 24.7963 19.7891 25.1377 20.8231 25.1377C23.3616 25.1377 25.4195 23.0799 25.4195 20.5413C25.4195 19.4306 25.0254 18.4118 24.3696 17.6172ZM15.2683 10.4868C14.8048 10.4868 14.4316 10.8638 14.4316 11.3234V15.2326H12.7542C12.2907 15.2326 11.9175 15.6097 11.9175 16.0692C11.9175 16.5287 12.2907 16.9058 12.7542 16.9058H15.2683C15.7319 16.9058 16.1051 16.5287 16.1051 16.0692V11.3234C16.1051 10.8638 15.7319 10.4868 15.2683 10.4868ZM20.8949 21.3987C21.2391 21.3987 21.5161 21.1195 21.5161 20.7726V18.8693C21.5161 18.5224 21.2391 18.2432 20.8949 18.2432C20.5507 18.2432 20.2737 18.5224 20.2737 18.8693V20.781C20.2737 21.1195 20.5507 21.3987 20.8949 21.3987ZM20.8949 21.7879C20.5423 21.7879 20.2485 22.0841 20.2485 22.4394C20.2485 22.7948 20.5423 23.0909 20.8949 23.0909C21.2475 23.0909 21.5413 22.7948 21.5413 22.4394C21.5413 22.0841 21.2475 21.7879 20.8949 21.7879Z',
          iconBox: '0 0 30 30',
          width: 30,
          height: 30,
          type: 'uid',
          iconBackgroundClass: ''
        },
        {
          label: 'Задачи с доступом',
          uid: '017a3e8c-79ac-452c-abb7-6652deecbd1c',
          bold: false,
          icon: 'M22.9688 15.0638C22.9688 15.5014 22.6112 15.8595 22.1741 15.8595C21.737 15.8595 21.3793 15.5014 21.3793 15.0638V13.9959C21.3793 13.1166 20.668 12.4044 19.7898 12.4044H8.34549C7.46729 12.4044 6.756 13.1166 6.756 13.9959V22.2951C6.756 23.1744 7.46729 23.8866 8.34549 23.8866H16.2493C16.6888 23.8866 17.045 24.2428 17.045 24.6823C17.045 25.1217 16.6888 25.478 16.2493 25.478H8.34549C6.59307 25.478 5.1665 24.0497 5.1665 22.2951V13.9959C5.1665 12.2413 6.59307 10.813 8.34549 10.813H9.29918V8.00816C9.29918 5.43006 11.441 3.33337 14.0677 3.33337C16.6943 3.33337 18.8361 5.43006 18.8361 8.00816V10.813H19.7898C21.5422 10.813 22.9688 12.2413 22.9688 13.9959V15.0638ZM17.2466 8.00816V10.813H10.8887V8.00816C10.8887 6.30932 12.3152 4.92479 14.0677 4.92479C15.8201 4.92479 17.2466 6.30932 17.2466 8.00816ZM14.6652 21.2609C14.5908 20.8804 14.4302 20.5355 14.207 20.2465C13.9705 19.9402 13.9052 19.5029 13.9769 19.1226C14.1565 18.1695 13.4595 17.1518 12.4093 17.1566C11.3638 17.1518 10.6639 18.1694 10.8422 19.1224C10.9133 19.5029 10.8481 19.94 10.6106 20.2456C10.3859 20.5348 10.2243 20.88 10.1534 21.2609L10.0475 21.8053C9.96337 22.2374 10.2943 22.639 10.7346 22.639H14.084C14.5242 22.639 14.8552 22.2374 14.7711 21.8053L14.6652 21.2609ZM11.8788 18.8055C11.8788 18.5046 12.1178 18.2579 12.4093 18.2579C13.1146 18.288 13.1146 19.3231 12.4093 19.3532C12.1178 19.3532 11.8788 19.1064 11.8788 18.8055ZM12.0068 21.5437C11.5739 21.5437 11.2332 21.12 11.5367 20.8112C12.0081 20.3315 12.8046 20.3315 13.2761 20.8112C13.5796 21.12 13.2389 21.5437 12.8059 21.5437H12.0068ZM20.6692 21.2609C20.5948 20.8804 20.4342 20.5355 20.2111 20.2465C19.9745 19.9402 19.9092 19.5029 19.9809 19.1226C20.1606 18.1695 19.4636 17.1518 18.4133 17.1566C17.3679 17.1518 16.6679 18.1694 16.8462 19.1224C16.9174 19.5029 16.8521 19.94 16.6147 20.2456C16.39 20.5348 16.2284 20.88 16.1574 21.2609L16.0515 21.8053C15.9674 22.2374 16.2984 22.639 16.7386 22.639H20.088C20.5283 22.639 20.8592 22.2374 20.7752 21.8053L20.6692 21.2609ZM17.8829 18.8055C17.8829 18.5046 18.1219 18.2579 18.4133 18.2579C19.1187 18.288 19.1187 19.3231 18.4133 19.3532C18.1219 19.3532 17.8829 19.1064 17.8829 18.8055ZM18.0109 21.5437C17.5779 21.5437 17.2372 21.12 17.5407 20.8112C18.0121 20.3315 18.8087 20.3315 19.2801 20.8112C19.5836 21.12 19.2429 21.5437 18.81 21.5437H18.0109ZM26.2151 20.2465C26.4383 20.5355 26.5989 20.8804 26.6733 21.2609L26.7792 21.8053C26.8633 22.2374 26.5323 22.639 26.0921 22.639H22.7427C22.3024 22.639 21.9715 22.2374 22.0555 21.8053L22.1615 21.2609C22.2324 20.88 22.394 20.5348 22.6187 20.2456C22.8562 19.94 22.9214 19.5029 22.8503 19.1224C22.672 18.1694 23.3719 17.1518 24.4174 17.1566C25.4676 17.1518 26.1646 18.1695 25.985 19.1226C25.9133 19.5029 25.9786 19.9402 26.2151 20.2465ZM24.4174 18.2579C24.1259 18.2579 23.8869 18.5046 23.8869 18.8055C23.8869 19.1064 24.1259 19.3532 24.4174 19.3532C25.1227 19.3231 25.1227 18.288 24.4174 18.2579ZM23.5447 20.8112C23.2413 21.12 23.582 21.5437 24.0149 21.5437H24.814C25.247 21.5437 25.5876 21.12 25.2842 20.8112C24.8127 20.3315 24.0162 20.3315 23.5447 20.8112Z',
          iconBox: '0 0 30 30',
          width: 30,
          height: 30,
          type: 'uid',
          iconBackgroundClass: ''
        },
        {
          label: 'Неразобранные',
          uid: '5183b619-3968-4c3a-8d87-3190cfaab014',
          bold: false,
          icon: 'M26 12.3422C26 11.6962 25.4763 11.1725 24.8303 11.1725H5.16971C4.5237 11.1725 4 11.6962 4 12.3422C4 12.9882 4.5237 13.5119 5.16971 13.5119H24.8303C25.4763 13.5119 26 12.9882 26 12.3422Z M20.3657 6.16971C20.3657 5.5237 19.842 5 19.196 5H5.16971C4.5237 5 4 5.5237 4 6.16971C4 6.81573 4.5237 7.33942 5.16971 7.33942H19.196C19.842 7.33942 20.3657 6.81573 20.3657 6.16971Z M22.5386 18.5624C22.5386 17.9164 22.0149 17.3927 21.3688 17.3927H5.16971C4.5237 17.3927 4 17.9164 4 18.5624C4 19.2084 4.5237 19.7321 5.16971 19.7321H21.3688C22.0149 19.7321 22.5386 19.2084 22.5386 18.5624Z M14.0494 24.7827C14.0494 24.1367 13.5257 23.613 12.8797 23.613H5.16971C4.5237 23.613 4 24.1367 4 24.7827C4 25.4287 4.5237 25.9524 5.16971 25.9524H12.8797C13.5257 25.9524 14.0494 25.4287 14.0494 24.7827Z',
          iconBox: '0 0 30 30',
          width: 30,
          height: 30,
          type: 'uid',
          iconBackgroundClass: ''
        },
        {
          label: 'Непрочитанные',
          uid: 'fa042915-a3d2-469c-bd5a-708cf0339b89',
          bold: false,
          icon: 'M22.6793 6.92814C22.505 6.75384 22.2726 6.66669 22.0111 6.66669C21.7497 6.66669 21.5173 6.75384 21.343 6.92814L18.7575 9.5136C17.4503 8.9326 16.0849 8.64209 14.7196 8.64209C12.628 8.64209 10.5363 9.31025 8.50284 10.6466C5.91738 12.3315 4.37772 14.4521 4.34867 14.4812C4.08722 14.8298 4.11627 15.2946 4.37772 15.6141C5.74308 17.299 7.19558 18.6353 8.67714 19.594L6.49838 21.8018C6.14978 22.1504 6.14978 22.7605 6.49838 23.1381C6.67268 23.3124 6.90508 23.3996 7.16653 23.3996C7.42798 23.3996 7.66039 23.3124 7.83469 23.1381L22.6793 8.26444C23.0279 7.91584 23.0279 7.30579 22.6793 6.92814ZM6.32408 15.0331C6.90508 14.365 8.03804 13.203 9.51959 12.2443C11.2626 11.1114 13.0056 10.5304 14.7196 10.5304C15.5911 10.5304 16.4916 10.6756 17.3341 10.9952L16.4626 11.8667C15.8816 11.5471 15.2425 11.3438 14.5743 11.3438C13.5866 11.3438 12.657 11.7214 11.9598 12.4186C11.2626 13.1158 10.8849 14.0454 10.8849 15.0331C10.8849 15.7013 11.0592 16.3404 11.4079 16.9214L10.0715 18.2577C8.79334 17.5024 7.54418 16.4275 6.32408 15.0331ZM13.2961 13.7259C13.6447 13.3773 14.1095 13.1739 14.6034 13.1739C14.7486 13.1739 14.9229 13.203 15.0682 13.232L12.8313 15.4689C12.8023 15.3236 12.7732 15.1784 12.7732 15.0041C12.7442 14.5393 12.9475 14.0745 13.2961 13.7259Z M24.8 14.4521C23.7542 13.1739 22.6793 12.0991 21.5754 11.2276C21.4011 11.1114 21.1977 11.0242 20.9944 11.0242C20.7039 11.0242 20.4424 11.1404 20.2391 11.3728C19.9195 11.7795 20.0067 12.3605 20.4134 12.6801C21.2268 13.3192 22.0402 14.1035 22.8536 15.0331C22.2726 15.7013 21.372 16.6018 20.2391 17.4443C18.3218 18.8387 16.3754 19.5359 14.4872 19.5359C13.9352 19.5359 13.4123 19.4778 12.8604 19.3616C12.8023 19.3616 12.7442 19.3325 12.657 19.3325C12.2213 19.3325 11.8436 19.6521 11.7565 20.0878C11.6984 20.3202 11.7565 20.5817 11.8727 20.785C12.0179 20.9884 12.2213 21.1336 12.4537 21.1917C13.0928 21.337 13.7609 21.3951 14.4581 21.3951C15.4749 21.3951 16.4916 21.2498 17.4793 20.9303C18.7866 20.5236 20.0938 19.8554 21.372 18.9258C23.3475 17.4733 24.5966 15.9046 24.829 15.5851C25.0614 15.2365 25.0614 14.7717 24.8 14.4521Z',
          iconBox: '0 0 30 30',
          width: 30,
          height: 30,
          type: 'uid',
          iconBackgroundClass: ''
        },
        {
          label: 'В работе',
          uid: '2a5cae4b-e877-4339-8ca1-bd61426864ec',
          bold: false,
          icon: 'M8.46116 22.6199L21.893 14.865L8.46116 7.1101L8.46116 22.6199ZM22.9465 16.6897C24.3512 15.8787 24.3512 13.8513 22.9465 13.0403L9.51464 5.28542C8.11 4.47445 6.3542 5.48817 6.3542 7.1101V22.6199C6.3542 24.2418 8.11 25.2555 9.51464 24.4446L22.9465 16.6897Z',
          iconBox: '0 0 30 30',
          width: 30,
          height: 30,
          type: 'uid',
          iconBackgroundClass: ''
        },
        {
          label: 'Задачи в фокусе',
          uid: '6fc44cc6-9d45-4052-917e-25b1189ab141',
          bold: false,
          icon: 'M21.0096 5.83331H8.99077C8.62927 5.83331 8.3335 6.1487 8.3335 6.53418V23.4658C8.3335 23.7578 8.50877 24.0206 8.7662 24.1258C8.83741 24.155 8.91409 24.1666 8.99077 24.1666C9.18248 24.1666 9.36871 24.0732 9.49469 23.9155L15.0002 18.9771L20.5056 23.9155C20.6316 24.0732 20.8124 24.1666 21.0096 24.1666C21.0862 24.1666 21.1629 24.155 21.2341 24.1258C21.4916 24.0265 21.6668 23.7578 21.6668 23.4658V6.53418C21.6668 6.1487 21.3711 5.83331 21.0096 5.83331ZM14.4962 17.3958L9.79183 21.7285V7.38279L20.2085 7.37273V21.7184L15.5041 17.3958C15.3781 17.2381 15.1973 17.1446 15.0002 17.1446C14.803 17.1446 14.6222 17.2381 14.4962 17.3958Z',
          iconBox: '0 0 30 30',
          width: 30,
          height: 30,
          type: 'uid',
          iconBackgroundClass: ''
        },
        {
          label: 'Готово к сдаче',
          uid: 'd35fe0bc-1747-4eb1-a1b2-3411e07a92a0',
          bold: false,
          icon: 'M22.781 8.88555C23.1009 9.20546 23.1009 9.71404 22.781 10.034L13.479 19.336C13.4039 19.412 13.3145 19.4723 13.2159 19.5135C13.1173 19.5546 13.0116 19.5758 12.9048 19.5758C12.7979 19.5758 12.6922 19.5546 12.5936 19.5135C12.495 19.4723 12.4056 19.412 12.3306 19.336L8.88537 15.8908C8.80938 15.8157 8.74905 15.7263 8.70787 15.6277C8.66669 15.5292 8.64549 15.4234 8.64549 15.3166C8.64549 15.2098 8.66669 15.104 8.70787 15.0054C8.74905 14.9069 8.80938 14.8175 8.88537 14.7424C8.96045 14.6664 9.04986 14.6061 9.14842 14.5649C9.24699 14.5237 9.35275 14.5025 9.45957 14.5025C9.56639 14.5025 9.67215 14.5237 9.77071 14.5649C9.86928 14.6061 9.95869 14.6664 10.0338 14.7424L12.9048 17.6134L21.6326 8.88555C21.7076 8.80956 21.7971 8.74923 21.8956 8.70805C21.9942 8.66687 22.1 8.64567 22.2068 8.64567C22.3136 8.64567 22.4194 8.66687 22.5179 8.70805C22.6165 8.74923 22.7059 8.80956 22.781 8.88555ZM21.0502 7.14655L12.9048 15.292L10.6162 13.0034C9.97635 12.3636 8.93459 12.3636 8.29477 13.0034L7.14637 14.1518C6.50655 14.7916 6.50655 15.8334 7.14637 16.4732L11.74 21.0668C12.3798 21.7066 13.4215 21.7066 14.0614 21.0668L24.52 10.6164C25.1598 9.97653 25.1598 8.93477 24.52 8.29495L23.3716 7.14655C22.7236 6.50673 21.69 6.50673 21.0502 7.14655Z',
          iconBox: '0 0 30 30',
          width: 30,
          height: 30,
          type: 'uid',
          iconBackgroundClass: ''
        },
        {
          label: 'Поручения',
          uid: '169d728b-b88b-462d-bd8e-3ac76806605b',
          bold: false,
          icon: 'M14.5889 5.83335C12.5446 5.83335 10.8874 7.49059 10.8874 9.5349C10.8874 11.5792 12.5446 13.2364 14.5889 13.2364C16.6332 13.2364 18.2905 11.5792 18.2905 9.5349C18.2905 7.49059 16.6332 5.83335 14.5889 5.83335ZM9.2207 9.5349C9.2207 6.57012 11.6241 4.16669 14.5889 4.16669C17.5537 4.16669 19.9571 6.57012 19.9571 9.5349C19.9571 12.4997 17.5537 14.9031 14.5889 14.9031C11.6241 14.9031 9.2207 12.4997 9.2207 9.5349ZM9.7352 16.7169C9.27499 16.7168 8.83057 16.8847 8.48551 17.1892C8.14047 17.4937 7.91855 17.9138 7.86146 18.3704L7.50774 21.2038C7.4905 21.3417 7.50279 21.4819 7.54382 21.6148C7.58485 21.7477 7.65367 21.8703 7.74571 21.9745C7.83776 22.0788 7.95092 22.1622 8.07769 22.2194C8.20446 22.2766 8.34193 22.3061 8.48099 22.3061H19.1236C19.5839 22.3061 19.957 22.6792 19.957 23.1394C19.957 23.5996 19.5839 23.9727 19.1236 23.9727H8.48136C8.10601 23.9728 7.73476 23.893 7.39259 23.7387C7.05036 23.5844 6.74487 23.3591 6.49639 23.0777C6.24791 22.7963 6.06212 22.4652 5.95135 22.1066C5.8406 21.7479 5.80738 21.3698 5.85391 20.9973L6.20764 18.1639C6.31509 17.304 6.73299 16.5129 7.38272 15.9396C8.03238 15.3663 8.86908 15.05 9.73552 15.0503H10.0539C10.5141 15.0503 10.8872 15.4234 10.8872 15.8836C10.8872 16.3438 10.5141 16.7169 10.0539 16.7169H9.7352ZM17.5317 17.1389C17.0541 17.1389 16.667 17.4872 16.667 17.9167C16.667 18.3463 17.0541 18.6945 17.5317 18.6945H22.7105L21.8637 19.5324C21.5424 19.8502 21.5685 20.3422 21.9218 20.6311C22.2752 20.92 22.822 20.8966 23.1432 20.5788L25.8337 17.9167L23.1432 15.2546C22.822 14.9368 22.2752 14.9134 21.9218 15.2023C21.5685 15.4913 21.5424 15.9832 21.8637 16.301L22.7105 17.1389H17.5317Z',
          iconBox: '0 0 30 30',
          width: 30,
          height: 30,
          type: 'greed',
          path: 'new_delegate',
          iconBackgroundClass: ''
        },
        {
          label: 'Проекты',
          uid: '7e345ae4-0408-416c-b1af-6bd8a15addec',
          bold: false,
          icon: 'M23.8818 9.48613V8.39669C23.8818 7.38613 23.0651 6.56289 22.0625 6.56289H14.565L14.3401 6.18824C14.2031 5.97134 13.9635 5.83331 13.7092 5.83331H8.15332C7.15073 5.83331 6.33398 6.65655 6.33398 7.66712V21.4995C6.33398 22.5101 7.15073 23.3333 8.15332 23.3333H23.6813C24.6839 23.3333 25.5006 22.5101 25.5006 21.4995V11.3101C25.5055 10.3636 24.7915 9.58472 23.8818 9.48613ZM7.81097 7.66712C7.81097 7.47486 7.96748 7.31712 8.15821 7.31712H13.2983L15.2937 10.6002C15.4258 10.8171 15.6654 10.9551 15.9246 10.9551H23.6911C23.8818 10.9551 24.0383 11.1129 24.0383 11.3051V21.4995C24.0383 21.6918 23.8818 21.8495 23.6911 21.8495H8.15332C7.96259 21.8495 7.80608 21.6918 7.80608 21.4995V7.66712H7.81097ZM22.4048 9.47134H16.3306L15.4649 8.04669H22.0576C22.2483 8.04669 22.4048 8.20444 22.4048 8.39669V9.47134Z',
          iconBox: '0 0 30 30',
          width: 30,
          height: 30,
          type: 'greed',
          path: 'new_private_projects',
          iconBackgroundClass: ''
        },
        {
          label: 'Доски',
          uid: '2e8dddd0-125a-49ef-a87c-0ea17b1b7f56',
          bold: false,
          icon: 'M6.5 24.9694C5.67347 24.9694 5 24.3061 5 23.4898V8.85714C5 8.04082 5.67347 7.37755 6.5 7.37755H10.102V6.32653C10.102 5.96939 10.3878 5.68367 10.7449 5.68367H12.7347L12.7857 5.55102C13.1122 4.62245 14.0102 4 15 4C15.9898 4 16.8878 4.62245 17.2143 5.55102L17.2653 5.68367H19.2551C19.6122 5.68367 19.898 5.96939 19.898 6.32653V7.37755H23.5C24.3265 7.37755 25 8.04082 25 8.85714V23.4898C25 24.3061 24.3265 24.9694 23.5 24.9694H6.5ZM6.29592 23.6939H23.7143V8.65306H19.898V9.70408C19.898 10.0612 19.6122 10.3469 19.2551 10.3469H10.7449C10.3878 10.3469 10.102 10.0612 10.102 9.70408V8.65306H6.29592V23.6939ZM11.398 9.06122H18.6122V6.96939H16.7041C16.3469 6.96939 16.0612 6.68367 16.0612 6.32653C16.0612 5.7449 15.5918 5.27551 15.0102 5.27551C14.4286 5.27551 13.949 5.7449 13.949 6.32653C13.949 6.68367 13.6633 6.96939 13.3061 6.96939H11.398V9.06122ZM19.1327 20.3571C18.7041 20.3571 18.3673 20.0102 18.3673 19.5918V18.6224C18.3673 18.1939 18.7143 17.8571 19.1327 17.8571H21.3163C21.7449 17.8571 22.0816 18.2041 22.0816 18.6224V19.5918C22.0816 20.0204 21.7347 20.3571 21.3163 20.3571H19.1327ZM14.0306 20.3571C13.6122 20.3571 13.2653 20.0102 13.2653 19.5918V18.6224C13.2653 18.1939 13.6122 17.8571 14.0306 17.8571H16.2143C16.6429 17.8571 16.9796 18.2041 16.9796 18.6224V19.5918C16.9796 20.0204 16.6327 20.3571 16.2143 20.3571H14.0306ZM8.68367 20.3571C8.2551 20.3571 7.91837 20.0102 7.91837 19.5918V18.6224C7.91837 18.1939 8.26531 17.8571 8.68367 17.8571H10.8673C11.2857 17.8571 11.6327 18.2041 11.6327 18.6224V19.5918C11.6327 20.0204 11.2857 20.3571 10.8673 20.3571H8.68367ZM19.1327 15.5C18.7041 15.5 18.3673 15.1531 18.3673 14.7347V13.7551C18.3673 13.3367 18.7143 12.9898 19.1327 12.9898H21.3163C21.7449 12.9898 22.0816 13.3367 22.0816 13.7551V14.7245C22.0816 15.1429 21.7347 15.4898 21.3163 15.4898H19.1327V15.5ZM14.0306 15.5C13.6122 15.5 13.2653 15.1531 13.2653 14.7347V13.7551C13.2653 13.3367 13.6122 12.9898 14.0306 12.9898H16.2143C16.6429 12.9898 16.9796 13.3367 16.9796 13.7551V14.7245C16.9796 15.1429 16.6327 15.4898 16.2143 15.4898H14.0306V15.5ZM8.68367 15.5C8.2551 15.5 7.91837 15.1531 7.91837 14.7347V13.7551C7.91837 13.3367 8.26531 12.9898 8.68367 12.9898H10.8673C11.2857 12.9898 11.6327 13.3367 11.6327 13.7551V14.7245C11.6327 15.1429 11.2857 15.4898 10.8673 15.4898H8.68367V15.5Z',
          iconBox: '0 0 30 30',
          width: 30,
          height: 30,
          type: 'greed',
          path: 'new_private_boards',
          iconBackgroundClass: ''
        }
      ]
      )
    } else if (state.lastTab === 'directory') {
      state.menu.push([
        {
          label: 'Регламенты',
          uid: '92413f6c-2ef3-476e-9429-e76d7818685d', // reglaments uuid
          bold: false,
          icon: 'M 22.082031 6.183594 L 16.820312 0.921875 C 16.664062 0.765625 16.433594 0.664062 16.199219 0.664062 C 15.96875 0.664062 15.738281 0.765625 15.582031 0.921875 L 12.871094 3.628906 C 12.535156 3.964844 12.535156 4.535156 12.871094 4.867188 L 12.898438 4.894531 L 6.113281 8.273438 C 5.933594 8.378906 5.777344 8.53125 5.699219 8.738281 L 0.746094 21.125 C 0.746094 21.148438 0.71875 21.175781 0.71875 21.203125 C 0.695312 21.253906 0.667969 21.304688 0.667969 21.355469 C 0.640625 21.589844 0.71875 21.820312 0.875 22 C 1.03125 22.234375 1.289062 22.335938 1.546875 22.335938 C 1.597656 22.335938 1.648438 22.335938 1.699219 22.3125 C 1.726562 22.3125 1.753906 22.3125 1.777344 22.285156 C 1.804688 22.285156 1.828125 22.257812 1.855469 22.257812 L 14.238281 17.304688 C 14.445312 17.226562 14.601562 17.074219 14.703125 16.890625 L 18.085938 10.105469 L 18.109375 10.132812 C 18.265625 10.289062 18.496094 10.390625 18.730469 10.390625 C 18.960938 10.390625 19.195312 10.289062 19.347656 10.132812 L 22.082031 7.421875 C 22.417969 7.089844 22.417969 6.519531 22.082031 6.183594 Z M 9.855469 12.789062 C 9.855469 12.582031 10.007812 12.429688 10.214844 12.429688 C 10.421875 12.429688 10.574219 12.582031 10.574219 12.789062 C 10.574219 12.996094 10.421875 13.152344 10.214844 13.152344 C 10.007812 13.152344 9.855469 12.96875 9.855469 12.789062 Z M 5.183594 19.058594 L 9.464844 14.777344 C 9.699219 14.855469 9.957031 14.90625 10.214844 14.90625 C 11.375 14.90625 12.332031 13.949219 12.332031 12.789062 C 12.332031 11.628906 11.375 10.675781 10.214844 10.675781 C 9.054688 10.675781 8.097656 11.628906 8.097656 12.789062 C 8.097656 13.046875 8.152344 13.304688 8.226562 13.539062 L 3.945312 17.820312 L 7.195312 9.695312 L 14.1875 6.183594 L 16.792969 8.789062 L 13.3125 15.808594 Z M 14.730469 4.25 L 16.199219 2.777344 L 20.226562 6.804688 L 18.753906 8.273438 Z M 14.730469 4.25',
          iconBox: '0 0 23 23',
          width: 20,
          height: 20,
          type: 'greed',
          path: 'reglaments',
          iconBackgroundClass: 'm-[5px]'
        }
      ])
      state.menu.push([
        {
          label: 'Сотрудники',
          uid: resp.data.emps.uid,
          bold: false,
          type: 'greed',
          path: 'new_emps',
          icon: 'M14.9998 6.54762C14.5894 6.54762 14.1957 6.71067 13.9055 7.00091C13.6153 7.29114 13.4522 7.68478 13.4522 8.09524C13.4522 8.50569 13.6153 8.89933 13.9055 9.18957C14.1957 9.4798 14.5894 9.64286 14.9998 9.64286C15.4103 9.64286 15.8039 9.4798 16.0942 9.18957C16.3844 8.89933 16.5475 8.50569 16.5475 8.09524C16.5475 7.68478 16.3844 7.29114 16.0942 7.00091C15.8039 6.71067 15.4103 6.54762 14.9998 6.54762ZM11.9046 8.09524C11.9046 7.27433 12.2307 6.48704 12.8112 5.90657C13.3916 5.3261 14.1789 5 14.9998 5C15.8207 5 16.608 5.3261 17.1885 5.90657C17.769 6.48704 18.0951 7.27433 18.0951 8.09524C18.0951 8.91615 17.769 9.70343 17.1885 10.2839C16.608 10.8644 15.8207 11.1905 14.9998 11.1905C14.1789 11.1905 13.3916 10.8644 12.8112 10.2839C12.2307 9.70343 11.9046 8.91615 11.9046 8.09524ZM22.351 7.32143C22.0432 7.32143 21.748 7.44372 21.5303 7.66139C21.3126 7.87907 21.1903 8.1743 21.1903 8.48214C21.1903 8.78998 21.3126 9.08522 21.5303 9.30289C21.748 9.52057 22.0432 9.64286 22.351 9.64286C22.6589 9.64286 22.9541 9.52057 23.1718 9.30289C23.3895 9.08522 23.5117 8.78998 23.5117 8.48214C23.5117 8.1743 23.3895 7.87907 23.1718 7.66139C22.9541 7.44372 22.6589 7.32143 22.351 7.32143ZM19.6427 8.48214C19.6427 8.12648 19.7127 7.7743 19.8489 7.44571C19.985 7.11712 20.1845 6.81855 20.4359 6.56706C20.6874 6.31557 20.986 6.11608 21.3146 5.97997C21.6432 5.84386 21.9954 5.77381 22.351 5.77381C22.7067 5.77381 23.0589 5.84386 23.3875 5.97997C23.7161 6.11608 24.0146 6.31557 24.2661 6.56706C24.5176 6.81855 24.7171 7.11712 24.8532 7.44571C24.9893 7.7743 25.0594 8.12648 25.0594 8.48214C25.0594 9.20044 24.774 9.88931 24.2661 10.3972C23.7582 10.9051 23.0693 11.1905 22.351 11.1905C21.6327 11.1905 20.9439 10.9051 20.4359 10.3972C19.928 9.88931 19.6427 9.20044 19.6427 8.48214ZM6.48793 8.48214C6.48793 8.1743 6.61022 7.87907 6.8279 7.66139C7.04557 7.44372 7.34081 7.32143 7.64865 7.32143C7.95649 7.32143 8.25172 7.44372 8.4694 7.66139C8.68707 7.87907 8.80936 8.1743 8.80936 8.48214C8.80936 8.78998 8.68707 9.08522 8.4694 9.30289C8.25172 9.52057 7.95649 9.64286 7.64865 9.64286C7.34081 9.64286 7.04557 9.52057 6.8279 9.30289C6.61022 9.08522 6.48793 8.78998 6.48793 8.48214ZM7.64865 5.77381C6.93035 5.77381 6.24148 6.05915 5.73357 6.56706C5.22566 7.07497 4.94031 7.76385 4.94031 8.48214C4.94031 9.20044 5.22566 9.88931 5.73357 10.3972C6.24148 10.9051 6.93035 11.1905 7.64865 11.1905C8.36694 11.1905 9.05582 10.9051 9.56373 10.3972C10.0716 9.88931 10.357 9.20044 10.357 8.48214C10.357 7.76385 10.0716 7.07497 9.56373 6.56706C9.05582 6.05915 8.36694 5.77381 7.64865 5.77381ZM9.31311 21.6408C8.96314 21.8714 8.55724 22.0031 8.1385 22.0217C7.71975 22.0402 7.30379 21.9451 6.93475 21.7463C6.56572 21.5476 6.25738 21.2526 6.04247 20.8927C5.82756 20.5329 5.7141 20.1215 5.71412 19.7024V14.6726C5.71412 14.57 5.75489 14.4716 5.82745 14.399C5.9 14.3265 5.99841 14.2857 6.10103 14.2857H9.22025C9.29083 13.7191 9.51748 13.1833 9.8749 12.7381H6.10103C5.58796 12.7381 5.09591 12.9419 4.73311 13.3047C4.37032 13.6675 4.1665 14.1596 4.1665 14.6726V19.7024C4.1663 20.3687 4.33818 21.0237 4.66549 21.6041C4.99279 22.1845 5.46443 22.6705 6.03472 23.0151C6.60501 23.3596 7.25461 23.5511 7.92062 23.5709C8.58663 23.5907 9.24646 23.4381 9.83621 23.128C9.59452 22.6586 9.41851 22.1582 9.31311 21.6408ZM20.1635 23.128C20.7532 23.4381 21.413 23.5907 22.0791 23.5709C22.7451 23.5511 23.3947 23.3596 23.965 23.0151C24.5352 22.6705 25.0069 22.1845 25.3342 21.6041C25.6615 21.0237 25.8334 20.3687 25.8332 19.7024V14.6726C25.8332 14.1596 25.6294 13.6675 25.2666 13.3047C24.9038 12.9419 24.4117 12.7381 23.8986 12.7381H20.1248C20.4819 13.1835 20.7085 13.7192 20.7794 14.2857H23.8986C24.0013 14.2857 24.0997 14.3265 24.1722 14.399C24.2448 14.4716 24.2856 14.57 24.2856 14.6726V19.7024C24.2856 20.1215 24.1721 20.5329 23.9572 20.8927C23.7423 21.2526 23.434 21.5476 23.0649 21.7463C22.6959 21.9451 22.2799 22.0402 21.8612 22.0217C21.4424 22.0031 21.0365 21.8714 20.6866 21.6408C20.5812 22.1581 20.4051 22.6586 20.1635 23.128ZM12.2915 12.7381C11.7784 12.7381 11.2864 12.9419 10.9236 13.3047C10.5608 13.6675 10.357 14.1596 10.357 14.6726V20.4762C10.357 21.7076 10.8461 22.8885 11.7168 23.7592C12.5875 24.6299 13.7685 25.119 14.9998 25.119C16.2312 25.119 17.4121 24.6299 18.2828 23.7592C19.1535 22.8885 19.6427 21.7076 19.6427 20.4762V14.6726C19.6427 14.1596 19.4389 13.6675 19.0761 13.3047C18.7133 12.9419 18.2212 12.7381 17.7082 12.7381H12.2915ZM11.9046 14.6726C11.9046 14.57 11.9454 14.4716 12.0179 14.399C12.0905 14.3265 12.1889 14.2857 12.2915 14.2857H17.7082C17.8108 14.2857 17.9092 14.3265 17.9818 14.399C18.0543 14.4716 18.0951 14.57 18.0951 14.6726V20.4762C18.0951 21.2971 17.769 22.0844 17.1885 22.6649C16.608 23.2453 15.8207 23.5714 14.9998 23.5714C14.1789 23.5714 13.3916 23.2453 12.8112 22.6649C12.2307 22.0844 11.9046 21.2971 11.9046 20.4762V14.6726Z',
          width: 30,
          height: 30,
          iconBox: '0 0 30 30',
          iconBackgroundClass: ''
        },
        {
          label: 'Метки',
          uid: '00a5b3de-9474-404d-b3ba-83f488ac6d30',
          bold: false,
          icon: 'M15.1314 7.73928C15.2871 7.57676 15.5025 7.48486 15.7276 7.48486L21.6895 7.48486C22.1456 7.48486 22.5153 7.85458 22.5153 8.31064V14.2726C22.5153 14.4977 22.4234 14.713 22.2609 14.8688L14.8658 21.9558C14.5414 22.2666 14.0281 22.2611 13.7105 21.9435L8.05667 16.2897C7.73902 15.972 7.73356 15.4587 8.04438 15.1344L15.1314 7.73928ZM14.1828 6.34215L6.29265 14.5753C5.67101 15.224 5.68193 16.2506 6.31723 16.8859L13.1143 23.6829C13.7496 24.3182 14.7762 24.3291 15.4248 23.7075L23.658 15.8174C23.983 15.5059 24.1668 15.0752 24.1668 14.625V7.48486C24.1668 6.57274 23.4274 5.83331 22.5153 5.83331H15.3752C14.925 5.83331 14.4943 6.0171 14.1828 6.34215ZM17.0535 11.0579C17.3059 10.8055 17.6406 10.6665 17.9979 10.6665C18.3553 10.6665 18.6899 10.8055 18.9424 11.0579C19.1948 11.3103 19.3337 11.645 19.3337 12.0023C19.3337 12.3597 19.1948 12.6943 18.9424 12.9467C18.6899 13.1992 18.3553 13.3381 17.9979 13.3381C17.6406 13.3381 17.3059 13.1992 17.0535 12.9467C16.8011 12.6943 16.6621 12.3597 16.6621 12.0023C16.6621 11.645 16.8011 11.3103 17.0535 11.0579Z',
          iconBox: '0 0 30 30',
          width: 30,
          height: 30,
          path: 'tags'
        },
        {
          label: 'Цвета',
          uid: 'ed8039ae-f3de-4369-8f32-829d401056e9',
          icon: 'M24.6092 11.9041L23.6149 10.9103C23.278 10.5735 22.8029 10.452 22.3666 10.5569C22.4715 10.1153 22.35 9.64044 22.013 9.30918L19.8533 7.15045C19.6544 6.95169 19.4003 6.82471 19.1352 6.78054C19.091 6.51553 18.964 6.26156 18.7651 6.0628L18.0912 5.38923C17.572 4.87026 16.7324 4.87026 16.2187 5.38923L9.43554 12.1691C8.91631 12.6881 8.91631 13.5273 9.43554 14.0407L10.8828 15.4872C11.0208 15.6253 11.0816 15.8075 11.065 16.0007C11.0429 16.1884 10.938 16.3596 10.7778 16.4645C6.46931 19.2084 6.06608 19.6115 5.89484 19.7826C4.70172 20.9752 4.70172 22.913 5.89484 24.1056C7.08796 25.2981 9.02679 25.2981 10.2199 24.1056C10.3911 23.9344 10.7944 23.5314 13.5397 19.225C13.6446 19.0649 13.8103 18.96 14.0037 18.9379C14.197 18.9158 14.3848 18.9821 14.5174 19.1146L15.9646 20.5611C16.4838 21.0801 17.3234 21.0801 17.8371 20.5611L24.6202 13.7812C25.1284 13.2567 25.1284 12.4175 24.6092 11.9041ZM16.8926 19.617L15.4453 18.1705C15.0255 17.7509 14.44 17.5466 13.849 17.6128C13.258 17.6791 12.7332 18.0048 12.4128 18.5017C11.1976 20.412 9.66202 22.764 9.26983 23.156C8.59594 23.8295 7.49672 23.8295 6.82283 23.156C6.14893 22.4824 6.14893 21.3837 6.82283 20.7101C7.21501 20.3182 9.57364 18.7888 11.4793 17.5687C11.9765 17.2484 12.3079 16.7239 12.3742 16.1332C12.4404 15.5424 12.2305 14.9572 11.8163 14.5376L10.3691 13.0911L11.4241 12.0366L17.9421 18.5514L16.8926 19.617ZM18.8811 17.6294L12.3631 11.1146L17.1522 6.32781L17.8316 7.00138L17.0748 8.67978C17.0472 8.73499 17.0638 8.80676 17.108 8.85093C17.1522 8.8951 17.224 8.90614 17.2792 8.87854L18.9198 8.08903L21.0795 10.2478L19.0181 13.7328C18.9794 13.7935 18.9849 13.8708 19.0346 13.9205C19.0844 13.9702 19.1672 13.9812 19.228 13.9371L22.6814 11.8433L23.6757 12.8371L18.8811 17.6294Z',
          bold: false,
          iconBox: '0 0 30 30',
          width: 30,
          height: 30,
          path: 'colors'
        }
      ])
    } else if (state.lastTab === 'settings') {
      state.menu.push([
        {
          label: 'Аккаунт',
          uid: '9d3ba501-c173-462d-9b5f-0db97c06a026',
          bold: false,
          type: 'account',
          icon: 'M14.9 25.8C8.89452 25.8 4 20.9055 4 14.9C4 8.89452 8.89452 4 14.9 4C20.9055 4 25.8 8.89452 25.8 14.9C25.8 20.9055 20.9055 25.8 14.9 25.8ZM14.9 20.2976C13.0344 20.2976 11.2422 20.874 9.7225 21.964L9.60721 22.0479L9.7225 22.1317C11.2422 23.2217 13.0344 23.7982 14.9 23.7982C16.7656 23.7982 18.5578 23.2217 20.0775 22.1317L20.1928 22.0479L20.0775 21.964C18.5578 20.874 16.7656 20.2976 14.9 20.2976ZM14.9 18.3062C17.3106 18.3062 19.6897 19.1237 21.5972 20.6225L21.6811 20.6854L21.7439 20.612C23.075 19.0085 23.8191 16.9857 23.8191 14.9105C23.8191 9.995 19.826 6.00183 14.9105 6.00183C9.995 6.00183 6.00183 9.995 6.00183 14.9105C6.00183 16.9962 6.73548 19.0189 8.07702 20.612L8.1399 20.6854L8.22375 20.6225C10.1103 19.1237 12.4894 18.3062 14.9 18.3062ZM14.9 15.8957C12.8353 15.8957 11.1479 14.2187 11.1479 12.154C11.1479 10.0893 12.8353 8.40192 14.9 8.40192C16.9647 8.40192 18.6521 10.0788 18.6521 12.154C18.6521 14.2292 16.9647 15.8957 14.9 15.8957ZM14.9 10.3933C13.9358 10.3933 13.1392 11.1793 13.1392 12.154C13.1392 13.1183 13.9253 13.9043 14.9 13.9043C15.8747 13.9043 16.6503 13.1183 16.6503 12.154C16.6503 11.1793 15.8642 10.3933 14.9 10.3933Z',
          width: 30,
          height: 30,
          iconBox: '0 0 30 30',
          iconBackgroundClass: ''
        },
        {
          label: 'Тариф',
          uid: '0853812c-cf1c-4037-b2b6-b7020cb68105',
          bold: false,
          type: 'tarif',
          icon: 'M17.131 17.2381C18.6212 17.2381 20.0504 16.6461 21.1042 15.5923C22.158 14.5385 22.75 13.1093 22.75 11.619C22.75 10.1288 22.158 8.69956 21.1042 7.64578C20.0504 6.59201 18.6212 6 17.131 6H11.8631C11.5837 6 11.3157 6.111 11.1181 6.30858C10.9205 6.50617 10.8095 6.77415 10.8095 7.05357V15.131H9.05357C8.77415 15.131 8.50617 15.242 8.30858 15.4395C8.111 15.6371 8 15.9051 8 16.1845C8 16.4639 8.111 16.7319 8.30858 16.9295C8.50617 17.1271 8.77415 17.2381 9.05357 17.2381H10.8095V19.5794H9.05357C8.77415 19.5794 8.50617 19.6904 8.30858 19.8879C8.111 20.0855 8 20.3535 8 20.6329C8 20.9124 8.111 21.1803 8.30858 21.3779C8.50617 21.5755 8.77415 21.6865 9.05357 21.6865H10.8095V23.4425C10.8095 23.7219 10.9205 23.9899 11.1181 24.1874C11.3157 24.385 11.5837 24.496 11.8631 24.496C12.1425 24.496 12.4105 24.385 12.6081 24.1874C12.8057 23.9899 12.9167 23.7219 12.9167 23.4425V21.6865H16.7798C17.0592 21.6865 17.3272 21.5755 17.5247 21.3779C17.7223 21.1803 17.8333 20.9124 17.8333 20.6329C17.8333 20.3535 17.7223 20.0855 17.5247 19.8879C17.3272 19.6904 17.0592 19.5794 16.7798 19.5794H12.9167V17.2381H17.131ZM12.9167 8.10714H17.131C18.0624 8.10714 18.9556 8.47715 19.6142 9.13576C20.2729 9.79437 20.6429 10.6876 20.6429 11.619C20.6429 12.5505 20.2729 13.4437 19.6142 14.1023C18.9556 14.7609 18.0624 15.131 17.131 15.131H12.9167V8.10714Z',
          width: 30,
          height: 30,
          iconBox: '0 0 30 30',
          iconBackgroundClass: ''
        },
        {
          label: 'Основные',
          uid: '88a45ac3-ac5d-486b-88bb-b96874580338',
          bold: false,
          type: 'option',
          icon: 'M26.2489 10.823L24.2075 7.28692C24.0076 6.94021 23.6937 6.67359 23.3192 6.53257C22.9447 6.39154 22.5329 6.38484 22.154 6.51361L20.0486 7.2255C19.6857 6.98122 19.3066 6.76215 18.9137 6.56984L18.4786 4.39091C18.4002 3.99859 18.1882 3.64557 17.8788 3.39196C17.5693 3.13836 17.1816 2.99984 16.7815 3H12.6987C12.2986 2.99984 11.9108 3.13836 11.6014 3.39196C11.292 3.64557 11.08 3.99859 11.0016 4.39091L10.5665 6.56984C10.1692 6.76004 9.78567 6.97768 9.41864 7.22118L7.32535 6.51361C6.94669 6.38529 6.53525 6.39222 6.16113 6.53323C5.78701 6.67423 5.47335 6.94059 5.27358 7.28692L3.23219 10.823C3.03221 11.1693 2.95835 11.5741 3.02317 11.9687C3.08798 12.3632 3.28747 12.7232 3.5877 12.9872L5.25801 14.4551L5.25066 14.5612L5.25066 14.5613C5.23788 14.7435 5.22514 14.9252 5.22514 15.1099C5.22514 15.3331 5.23379 15.5537 5.24936 15.7725L3.58857 17.2326C3.28805 17.4965 3.08823 17.8563 3.0231 18.2509C2.95797 18.6455 3.03155 19.0504 3.23133 19.3969L5.27272 22.933C5.47241 23.2798 5.78631 23.5466 6.16082 23.6878C6.53533 23.829 6.94723 23.8358 7.32621 23.7071L9.43161 22.9944C9.79432 23.2391 10.1735 23.4585 10.5665 23.6509L11.0016 25.829C11.08 26.2213 11.292 26.5743 11.6014 26.8279C11.9108 27.0815 12.2986 27.22 12.6987 27.2199H16.4701V25.4899H12.6987L12.0846 22.4192C11.235 22.1036 10.4463 21.6435 9.75339 21.0594L6.77175 22.068L4.73036 18.5319L7.08748 16.4602C6.92621 15.5657 6.92416 14.6497 7.08142 13.7545L4.73036 11.688L6.77175 8.15191L9.73609 9.15531C10.434 8.57034 11.2288 8.11191 12.0846 7.80073L12.6987 4.72999H16.7815L17.3956 7.80073C18.2452 8.11637 19.0338 8.57639 19.7268 9.1605L22.7084 8.15191L24.7498 11.688L22.3296 13.809L23.4696 15.1099L25.8916 12.9872C26.1921 12.7234 26.3919 12.3636 26.4571 11.969C26.5222 11.5744 26.4486 11.1695 26.2489 10.823ZM14.7403 20.2999C13.7138 20.2999 12.7104 19.9955 11.8569 19.4252C11.0034 18.8549 10.3382 18.0444 9.94536 17.096C9.55254 16.1477 9.44976 15.1041 9.65002 14.0974C9.85028 13.0906 10.3446 12.1659 11.0704 11.44C11.7962 10.7142 12.721 10.2199 13.7278 10.0196C14.7345 9.81939 15.778 9.92217 16.7264 10.315C17.6747 10.7078 18.4853 11.373 19.0556 12.2265C19.6259 13.08 19.9302 14.0834 19.9302 15.1099C19.9377 15.7935 19.8085 16.4717 19.5503 17.1047C19.2921 17.7378 18.9101 18.3129 18.4266 18.7963C17.9432 19.2797 17.3681 19.6617 16.7351 19.9199C16.1021 20.1781 15.4239 20.3073 14.7403 20.2999ZM14.7403 11.6499C14.283 11.6395 13.8285 11.7219 13.404 11.8921C12.9795 12.0623 12.5939 12.3168 12.2705 12.6402C11.9471 12.9635 11.6927 13.3491 11.5225 13.7736C11.3523 14.1981 11.2699 14.6527 11.2803 15.1099C11.2699 15.5671 11.3523 16.0217 11.5225 16.4462C11.6927 16.8707 11.9471 17.2563 12.2705 17.5796C12.5939 17.903 12.9795 18.1575 13.404 18.3277C13.8285 18.4979 14.283 18.5803 14.7403 18.5699C15.1975 18.5803 15.6521 18.4979 16.0766 18.3277C16.501 18.1575 16.8866 17.903 17.21 17.5796C17.5334 17.2563 17.7879 16.8707 17.9581 16.4462C18.1283 16.0217 18.2107 15.5671 18.2003 15.1099C18.2107 14.6527 18.1283 14.1981 17.9581 13.7736C17.7879 13.3491 17.5334 12.9635 17.21 12.6402C16.8866 12.3168 16.501 12.0623 16.0766 11.8921C15.6521 11.7219 15.1975 11.6395 14.7403 11.6499ZM18.5546 21.6752L20.795 23.9156L25.6303 19.0802L26.8499 20.2999L20.795 26.3548L17.335 22.8949L18.5546 21.6752Z',
          width: 30,
          height: 30,
          iconBox: '0 0 30 30',
          iconBackgroundClass: ''
        },
        {
          label: 'Карма',
          uid: '5cda53e7-f859-4bac-b76c-4ad330a65a9a',
          bold: false,
          type: 'karma',
          icon: 'M23.3205 4C22.6442 3.99971 21.986 4.21896 21.4449 4.62479C20.9038 5.03062 20.5091 5.6011 20.32 6.2505C20.131 6.8999 20.1578 7.59312 20.3964 8.22597C20.6351 8.85881 21.0728 9.3971 21.6436 9.75991L19.6044 16.897C19.5411 16.8929 19.4777 16.8908 19.4143 16.8906C18.7421 16.8899 18.0877 17.1071 17.5494 17.5097L13.7821 14.3703C13.9604 13.8411 13.9937 13.2738 13.8785 12.7274C13.7633 12.181 13.5038 11.6754 13.1269 11.2633C12.7501 10.8512 12.2697 10.5476 11.7358 10.3841C11.2018 10.2206 10.6338 10.2032 10.0909 10.3336C9.54789 10.464 9.04979 10.7376 8.64837 11.1258C8.24695 11.514 7.95689 12.0026 7.80835 12.5409C7.65981 13.0792 7.65823 13.6475 7.80377 14.1866C7.94931 14.7257 8.23665 15.216 8.6359 15.6064L6.42438 20.0297C6.32753 20.0205 6.2303 20.0158 6.13302 20.0156C5.38437 20.0147 4.66019 20.2822 4.09193 20.7696C3.52367 21.2569 3.14899 21.9319 3.03591 22.672C2.92283 23.412 3.07883 24.1681 3.47561 24.803C3.87239 25.4378 4.48364 25.9094 5.19841 26.132C5.91318 26.3547 6.68409 26.3137 7.37121 26.0165C8.05834 25.7193 8.61613 25.1856 8.94333 24.5122C9.27054 23.8388 9.34548 23.0705 9.15454 22.3466C8.9636 21.6227 8.51945 20.9913 7.9027 20.5669L9.99254 16.3877C10.5002 16.5278 11.0351 16.537 11.5472 16.4144C12.0594 16.2918 12.5321 16.0415 12.9213 15.6868L16.5688 18.7264C16.3211 19.2722 16.2356 19.8778 16.3225 20.4709C16.4095 21.0639 16.6651 21.6195 17.059 22.0713C17.4529 22.5231 17.9684 22.8521 18.544 23.0191C19.1197 23.186 19.7313 23.1839 20.3058 23.013C20.8803 22.842 21.3935 22.5095 21.7842 22.0549C22.175 21.6004 22.4268 21.0431 22.5096 20.4494C22.5924 19.8558 22.5027 19.2508 22.2512 18.7067C21.9998 18.1626 21.5971 17.7023 21.0913 17.3807L23.1304 10.2437C23.1933 10.2475 23.2566 10.25 23.3205 10.25C24.1493 10.25 24.9442 9.92076 25.5302 9.33471C26.1163 8.74866 26.4455 7.9538 26.4455 7.125C26.4455 6.2962 26.1163 5.50134 25.5302 4.91529C24.9442 4.32924 24.1493 4 23.3205 4V4ZM6.13302 24.7031C5.82399 24.7031 5.52189 24.6115 5.26494 24.4398C5.00799 24.2681 4.80772 24.0241 4.68946 23.7386C4.5712 23.4531 4.54025 23.1389 4.60054 22.8358C4.66083 22.5327 4.80965 22.2543 5.02817 22.0358C5.24669 21.8173 5.5251 21.6684 5.82819 21.6081C6.13129 21.5479 6.44545 21.5788 6.73096 21.6971C7.01647 21.8153 7.2605 22.0156 7.43219 22.2725C7.60388 22.5295 7.69552 22.8316 7.69552 23.1406C7.69505 23.5549 7.53029 23.952 7.23736 24.245C6.94444 24.5379 6.54728 24.7027 6.13302 24.7031V24.7031ZM10.8205 14.9375C10.5115 14.9375 10.2094 14.8459 9.95244 14.6742C9.69549 14.5025 9.49522 14.2585 9.37696 13.9729C9.2587 13.6874 9.22775 13.3733 9.28804 13.0702C9.34833 12.7671 9.49715 12.4887 9.71567 12.2701C9.93419 12.0516 10.2126 11.9028 10.5157 11.8425C10.8188 11.7822 11.133 11.8132 11.4185 11.9314C11.704 12.0497 11.948 12.25 12.1197 12.5069C12.2914 12.7639 12.383 13.066 12.383 13.375C12.3826 13.7893 12.2178 14.1864 11.9249 14.4793C11.6319 14.7723 11.2348 14.937 10.8205 14.9375ZM19.4143 21.5781C19.1052 21.5781 18.8031 21.4865 18.5462 21.3148C18.2892 21.1431 18.089 20.8991 17.9707 20.6136C17.8524 20.3281 17.8215 20.0139 17.8818 19.7108C17.9421 19.4077 18.0909 19.1293 18.3094 18.9108C18.5279 18.6923 18.8063 18.5434 19.1094 18.4831C19.4125 18.4229 19.7267 18.4538 20.0122 18.5721C20.2977 18.6903 20.5418 18.8906 20.7134 19.1475C20.8851 19.4045 20.9768 19.7066 20.9768 20.0156C20.9763 20.4299 20.8115 20.827 20.5186 21.12C20.2257 21.4129 19.8285 21.5777 19.4143 21.5781V21.5781ZM23.3205 8.6875C23.0115 8.6875 22.7094 8.59586 22.4524 8.42417C22.1955 8.25248 21.9952 8.00845 21.877 7.72294C21.7587 7.43743 21.7278 7.12327 21.788 6.82017C21.8483 6.51708 21.9971 6.23867 22.2157 6.02015C22.4342 5.80163 22.7126 5.65281 23.0157 5.59252C23.3188 5.53223 23.633 5.56318 23.9185 5.68144C24.204 5.7997 24.448 5.99997 24.6197 6.25692C24.7914 6.51387 24.883 6.81597 24.883 7.125C24.8826 7.53926 24.7178 7.93642 24.4249 8.22934C24.1319 8.52227 23.7348 8.68704 23.3205 8.6875Z',
          width: 30,
          height: 30,
          iconBox: '0 0 30 30',
          iconBackgroundClass: ''
        }
      ])
    }
    const newAssignments = []
    newAssignments.push({
      dep: 'Поручено мной',
      items: resp.data.delegate_iam.items
    })
    newAssignments.push({
      dep: 'Поручено мне',
      items: resp.data.delegate_to_me.items
    })
    resp.data.new_delegate = newAssignments

    // Merge emps to deps like new private projects
    const dataEmps = [...resp.data.emps?.items]
    const newEmps = []
    newEmps.push({
      dep: { uid: '', name: 'Вне отдела' },
      items: getAllMembersByDepartmentUID(
        dataEmps,
        '00000000-0000-0000-0000-000000000000'
      )
    })
    for (const department of resp.data.deps.items) {
      const dep = {
        dep: department,
        items: getAllMembersByDepartmentUID(dataEmps, department.uid)
      }
      newEmps.push(dep)
    }
    resp.data.new_emps = newEmps

    // Merge common projects and private projects into my own data structure
    // Array of objects where object is { dep: 'Dependency name', items: items }
    const itemsInProjectView = []
    itemsInProjectView.push({
      dep: 'Мои проекты',
      items: resp.data.private_projects.items,
      type: 'projects'
    })
    itemsInProjectView.push({
      dep: 'Общие проекты',
      items: resp.data.common_projects.items,
      type: 'projects'
    })
    resp.data.new_private_projects = itemsInProjectView

    const newCommonBoards = []
    newCommonBoards.push({
      dep: 'Мои доски',
      items: resp.data.private_boards.items
    })
    newCommonBoards.push({
      dep: 'Общие доски',
      items: resp.data.common_boards.items
    })
    resp.data.new_private_boards = newCommonBoards
    state.navigator = resp.data
  },
  [NAVIGATOR_UPDATE_ASSIGNMENTS]: (state, resp) => {
    const newAssignments = []
    newAssignments.push({
      dep: 'Поручено мной',
      items: resp.data.delegate_iam.items
    })
    newAssignments.push({
      dep: 'Поручено мне',
      items: resp.data.delegate_to_me.items
    })
    state.navigator.delegate_iam = resp.data.delegate_iam
    state.navigator.delegate_to_me = resp.data.delegate_to_me
    state.navigator.new_delegate = newAssignments
  },
  [NAVIGATOR_PUSH_DEPARTAMENT]: (state, departaments) => {
    for (const departament of departaments) {
      if (
        departament.uid_parent ||
        departament.uid_parent === '00000000-0000-0000-0000-000000000000'
      ) {
        // adding departament to the root
        state.navigator.deps.items.push(departament)
      } else {
        // adding departament recursively to subarrays
        visitChildren(state.navigator.deps.items, (value) => {
          if (value.uid === departament.uid_parent) {
            value.children.push(departament)
          }
        })
      }
      // добавить в new_emps
      state.navigator.new_emps.push({
        dep: departament,
        items: getAllMembersByDepartmentUID(
          state.navigator.emps.items,
          departament.uid
        )
      })
    }
  },
  [NAVIGATOR_PUSH_REGLAMENT]: (state, reglament) => {
    state.navigator.reglaments.items.push(reglament)
  },
  [NAVIGATOR_REMOVE_REGLAMENT]: (state, reglament) => {
    // Проверка для правильной работы вебсинка, т.к он вместо объекта присылает только UID регламента
    const uid = typeof reglament === 'object' ? reglament.uid : reglament
    for (let i = 0; i < state.navigator.reglaments.items.length; i++) {
      if (state.navigator.reglaments.items[i].uid === uid) {
        state.navigator.reglaments.items.splice(i, 1)
        return
      }
    }
  },
  [NAVIGATOR_REMOVE_DEPARTAMENT]: (state, uidDepartment) => {
    // удаляем  из new_emps
    const indexEmps = state.navigator.new_emps.findIndex(
      (emps) => emps.dep.uid === uidDepartment
    )
    if (indexEmps !== -1) {
      const emps = state.navigator.new_emps[indexEmps]
      const rootEmps = state.navigator.new_emps.find(
        (emps) => emps.dep.uid === ''
      )
      if (rootEmps && emps) {
        rootEmps.items.push(...emps.items)
      }
      state.navigator.new_emps.splice(indexEmps, 1)
    }
    // удаляем из deps
    const indexDeps = state.navigator.deps.items.findIndex(
      (dep) => dep.uid === uidDepartment
    )
    if (indexDeps !== -1) state.navigator.deps.items.splice(indexDeps, 1)
  },
  [NAVIGATOR_UPDATE_DEPARTMENT]: (state, department) => {
    // Возможная проблема: заточено только под редактирование конкретного отдела. А мы хотим переносить сотрудника из одного отдела, в другой => нужно менять 2 отдела вместо одного
    // Ищем прошлую версию отдела, меняем на новую, которая пришла
    const indexEmps = state.navigator.new_emps.findIndex(
      (emps) => emps.dep.uid === department.uid
    )
    if (indexEmps !== -1) {
      state.navigator.new_emps[indexEmps].dep = department // Проблема: меняем только свойство dep, а items везде остаются прежними
    }

    const indexDeps = state.navigator.deps.items.findIndex(
      (dep) => dep.uid === department.uid
    )
    if (indexDeps !== -1) state.navigator.deps.items[indexDeps] = department
  },
  [NAVIGATOR_CHANGE_EMPLOYEE_DEPARTMENT]: (state, data) => {
    const uidDepOld =
      data.uidDepartmentOld === '00000000-0000-0000-0000-000000000000'
        ? ''
        : data.uidDepartmentOld
    const uidDepNew =
      data.uidDepartmentNew === '00000000-0000-0000-0000-000000000000'
        ? ''
        : data.uidDepartmentNew
    const indexEmpsOld = state.navigator.new_emps.findIndex(
      (emps) => emps.dep.uid === uidDepOld
    )
    const indexEmpsNew = state.navigator.new_emps.findIndex(
      (emps) => emps.dep.uid === uidDepNew
    )
    const empsOld = state.navigator.new_emps[indexEmpsOld]
    const empsNew = state.navigator.new_emps[indexEmpsNew]
    if (empsOld && empsNew && empsOld.dep.uid !== empsNew.dep.uid) {
      // отдел поменялся - перемещаем сотрудника
      const indexEmp = empsOld.items.findIndex((emp) => emp.uid === data.uidEmp)
      const [emp] = empsOld.items.splice(indexEmp, 1)
      empsNew.items.push(emp)
      emp.uid_dep = empsNew.dep.uid || '00000000-0000-0000-0000-000000000000'
    }
  },
  [NAVIGATOR_PUSH_PROJECT]: (state, projects) => {
    for (const project of projects) {
      if (
        !project.uid_parent ||
        project.uid_parent === '00000000-0000-0000-0000-000000000000'
      ) {
        // adding projects to the root
        state.navigator.new_private_projects[0].items.push(project)
      } else {
        // adding projects recursively to subarrays
        visitChildren(
          state.navigator.new_private_projects[0].items,
          (value) => {
            if (value.uid === project.uid_parent) {
              value.children.push(project)
            }
          }
        )
      }
    }
  },
  [NAVIGATOR_PUSH_BOARD]: (state, boards) => {
    for (const board of boards) {
      if (
        !board.uid_parent ||
        board.uid_parent === '00000000-0000-0000-0000-000000000000'
      ) {
        // adding projects to the root
        state.navigator.new_private_boards[0].items.push(board)
      } else {
        // adding projects recursively to subarrays
        visitChildren(state.navigator.new_private_boards[0].items, (value) => {
          if (value.uid === board.uid_parent) {
            value.children.push(board)
          }
        })
      }
    }
  },
  [NAVIGATOR_PUSH_TAG]: (state, tags) => {
    for (const tag of tags) {
      if (
        !tag.uid_parent ||
        tag.uid_parent === '00000000-0000-0000-0000-000000000000'
      ) {
        // adding tags to the root
        state.navigator.tags.items.push(tag)
      } else {
        // adding projects recursively to subarrays
        visitChildren(state.navigator.tags.items, (value) => {
          if (value.uid === tag.uid_parent) {
            value.children.push(tag)
          }
        })
      }
    }
  },
  [NAVIGATOR_PUSH_COLOR]: (state, colors) => {
    for (const color of colors) {
      state.navigator.colors.items.push(color)
    }
  },
  NAVIGATOR_UPDATE_COLOR: (state, colors) => {
    visitChildren(state.navigator.colors.items, (value, index) => {
      if (value.uid === colors.uid) {
        Object.assign(value, colors)
      }
    })
  },
  [NAVIGATOR_UPDATE_REGLAMENT]: (state, reglament) => {
    for (let i = 0; i < state.navigator.reglaments.items.length; i++) {
      if (state.navigator.reglaments.items[i].uid === reglament.uid) {
        Object.assign(state.navigator.reglaments.items[i], reglament)
        return
      }
    }
  },
  NAVIGATOR_UPDATE_TAG: (state, tag) => {
    visitChildren(state.navigator.tags.items, (value) => {
      if (value.uid === tag.uid) {
        Object.assign(value, tag)
      }
    })
  },
  [NAVIGATOR_PUSH_EMPLOYEE]: (state, employees) => {
    for (const employee of employees) {
      state.navigator.emps.items.push(employee)
      const dep =
        employee.uid_dep === '00000000-0000-0000-0000-000000000000'
          ? ''
          : employee.uid_dep
      const emps = state.navigator.new_emps.find((emps) => emps.dep.uid === dep)
      emps?.items?.push(employee)
    }
  },
  [NAVIGATOR_REMOVE_PROJECT]: (state, project) => {
    if (
      !project.uid_parent ||
      project.uid_parent === '00000000-0000-0000-0000-000000000000'
    ) {
      for (
        let i = 0;
        i < state.navigator.new_private_projects[0].items.length;
        i++
      ) {
        if (
          state.navigator.new_private_projects[0].items[i].uid === project.uid
        ) {
          state.navigator.new_private_projects[0].items.splice(i, 1)
        }
      }
      for (
        let i = 0;
        i < state.navigator.new_private_projects[1].items.length;
        i++
      ) {
        if (
          state.navigator.new_private_projects[1].items[i].uid === project.uid
        ) {
          state.navigator.new_private_projects[1].items.splice(i, 1)
        }
      }
    } else {
      visitChildren(
        state.navigator.new_private_projects[0].items,
        (value, index) => {
          if (value.uid === project.uid_parent) {
            for (let i = 0; i < value.children.length; i++) {
              if (value.children[i].uid === project.uid) {
                // remove element without mutation
                value.children.splice(i, 1)
              }
            }
          }
        }
      )
    }
  },
  [NAVIGATOR_REMOVE_BOARD]: (state, board) => {
    if (
      !board.uid_parent ||
      board.uid_parent === '00000000-0000-0000-0000-000000000000'
    ) {
      for (
        let i = 0;
        i < state.navigator.new_private_boards[0].items.length;
        i++
      ) {
        if (state.navigator.new_private_boards[0].items[i].uid === board.uid) {
          state.navigator.new_private_boards[0].items.splice(i, 1)
        }
      }
      for (
        let i = 0;
        i < state.navigator.new_private_boards[1].items.length;
        i++
      ) {
        if (state.navigator.new_private_boards[1].items[i].uid === board.uid) {
          state.navigator.new_private_boards[1].items.splice(i, 1)
        }
      }
    } else {
      visitChildren(
        state.navigator.new_private_boards[0].items,
        (value, index) => {
          if (value.uid === board.uid_parent) {
            for (let i = 0; i < value.children.length; i++) {
              if (value.children[i].uid === board.uid) {
                // remove element without mutation
                value.children.splice(i, 1)
              }
            }
          }
        }
      )
    }
  },
  [NAVIGATOR_UPDATE_EMPLOYEE]: (state, employee) => {
    for (const dep of state.navigator.new_emps) {
      for (let i = 0; i < dep.items.length; i++) {
        if (dep.items[i].uid === employee.uid) {
          dep.items[i] = employee
        }
      }
    }
  },
  [NAVIGATOR_REMOVE_EMPLOYEE]: (state, employee) => {
    for (const dep of state.navigator.new_emps) {
      for (let i = 0; i < dep.items.length; i++) {
        if (dep.items[i].uid === employee.uid) {
          dep.items.splice(i, 1)
        }
      }
    }
  },
  [NAVIGATOR_REMOVE_TAG]: (state, tag) => {
    // removing wihtout mutation even on root level
    if (
      !tag.uid_parent ||
      tag.uid_parent === '00000000-0000-0000-0000-000000000000'
    ) {
      for (let i = 0; i < state.navigator.tags.items.length; i++) {
        if (state.navigator.tags.items[i].uid === tag.uid) {
          state.navigator.tags.items.splice(i, 1)
        }
      }
    } else {
      visitChildren(state.navigator.tags.items, (value, index) => {
        if (value.uid === tag.uid_parent) {
          for (let i = 0; i < value.children.length; i++) {
            if (value.children[i].uid === tag.uid) {
              // remove element without mutationy
              value.children.splice(i, 1)
            }
          }
        }
      })
    }
  },
  [NAVIGATOR_REMOVE_COLOR]: (state, color) => {
    for (let i = 0; i < state.navigator.colors.items.length; i++) {
      if (state.navigator.colors.items[i].uid === color.uid) {
        state.navigator.colors.items.splice(i, 1)
      }
    }
  },
  NAVIGATOR_UPDATE_PROJECT: (state, project) => {
    visitChildren(
      state.navigator.new_private_projects[0].items,
      (value, index) => {
        if (value.uid === project.uid) {
          Object.assign(value, project)
        }
      }
    )
  },
  [NAVIGATOR_ERROR]: (state) => {
    state.status = 'error'
    state.hasLoadedOnce = true
  },
  [PATCH_SETTINGS_SUCCESS]: (state, resp) => {
    state.navigator.settings = resp
  },
  [RESET_STATE_NAVIGATOR]: (state) => {
    Object.assign(state, getDefaultState())
  }
}

export default {
  state,
  getters,
  actions,
  mutations
}
